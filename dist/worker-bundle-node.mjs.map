{"version":3,"file":"worker-bundle-node.mjs","sources":["../node_modules/comlink/dist/esm/comlink.mjs","../src/webworker/archive-reader.js","../src/webworker/archive-writer.js","../src/webworker/wasm-gen/libarchive.js","../src/webworker/wasm-module.js","../src/webworker/worker.js","../src/webworker/node-worker.js","../node_modules/comlink/dist/esm/node-adapter.mjs"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","const TYPE_MAP = {\n  32768: \"FILE\",\n  16384: \"DIR\",\n  40960: \"SYMBOLIC_LINK\",\n  49152: \"SOCKET\",\n  8192: \"CHARACTER_DEVICE\",\n  24576: \"BLOCK_DEVICE\",\n  4096: \"NAMED_PIPE\",\n};\n\nexport class ArchiveReader {\n  /**\n   * Archive reader\n   * @param {WasmModule} wasmModule emscripten module\n   */\n  constructor(wasmModule) {\n    this._wasmModule = wasmModule;\n    this._runCode = wasmModule.runCode;\n    this._file = null;\n    this._passphrase = null;\n    this._locale = \"en_US.UTF-8\";\n  }\n\n  /**\n   * Open archive, needs to closed manually\n   * @param {File} file\n   */\n  async open(file) {\n    if (this._file !== null) {\n      console.warn(\"Closing previous file\");\n      this.close();\n    }\n    const fileData = await this._loadFile(file);\n    this._fileLength = fileData.length;\n    this._filePtr = fileData.ptr;\n  }\n\n  /**\n   * Close archive\n   */\n  close() {\n    this._runCode.closeArchive(this._archive);\n    this._wasmModule._free(this._filePtr);\n    this._file = null;\n    this._filePtr = null;\n    this._archive = null;\n  }\n\n  /**\n   * Detect if archive has encrypted data\n   * @returns {boolean|null} null if could not be determined\n   */\n  hasEncryptedData() {\n    this._archive = this._runCode.openArchive(\n      this._filePtr,\n      this._fileLength,\n      this._passphrase,\n      this._locale,\n    );\n    this._runCode.getNextEntry(this._archive);\n    const status = this._runCode.hasEncryptedEntries(this._archive);\n    if (status === 0) {\n      return false;\n    } else if (status > 0) {\n      return true;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * set passphrase to be used with archive\n   * @param {string} passphrase\n   */\n  setPassphrase(passphrase) {\n    this._passphrase = passphrase;\n  }\n\n  /**\n   * Set locale, defaults to: en_US.UTF-8\n   * @param {string} locale\n   */\n  setLocale(locale) {\n    this._locale = locale;\n  }\n\n  /**\n   * Get archive entries\n   * @param {boolean} skipExtraction\n   * @param {string} except don't skip extraction for this entry\n   */\n  *entries(skipExtraction = false, except = null) {\n    this._archive = this._runCode.openArchive(\n      this._filePtr,\n      this._fileLength,\n      this._passphrase,\n      this._locale,\n    );\n    let entry;\n    while (true) {\n      entry = this._runCode.getNextEntry(this._archive);\n      if (entry === 0) break;\n\n      const entryData = {\n        size: this._runCode.getEntrySize(entry),\n        path: this._runCode.getEntryName(entry),\n        type: TYPE_MAP[this._runCode.getEntryType(entry)],\n        lastModified: this._runCode.getEntryLastModified(entry),\n        ref: entry,\n      };\n\n      if (entryData.type === \"FILE\") {\n        let fileName = entryData.path.split(\"/\");\n        entryData.fileName = fileName[fileName.length - 1];\n      }\n\n      if (skipExtraction && except !== entryData.path) {\n        this._runCode.skipEntry(this._archive);\n      } else {\n        const ptr = this._runCode.getFileData(this._archive, entryData.size);\n        if (ptr < 0) {\n          throw new Error(this._runCode.getError(this._archive));\n        }\n        entryData.fileData = this._wasmModule.HEAPU8.slice(\n          ptr,\n          ptr + entryData.size,\n        );\n        this._wasmModule._free(ptr);\n      }\n      yield entryData;\n    }\n  }\n\n  async _loadFile(file) {\n    const arrayBuffer = await file.arrayBuffer();\n    const array = new Uint8Array(arrayBuffer);\n    const filePtr = this._runCode.malloc(array.length);\n    this._wasmModule.HEAPU8.set(array, filePtr);\n    return {\n      ptr: filePtr,\n      length: array.length,\n    };\n  }\n}\n","export class ArchiveWriter {\n  /**\n   * Archive writer\n   * @param {WasmModule} wasmModule emscripten module\n   */\n  constructor(wasmModule) {\n    this._wasmModule = wasmModule;\n    this._runCode = wasmModule.runCode;\n    this._passphrase = null;\n    this._locale = \"en_US.UTF-8\";\n  }\n\n  async write(files, compression, format, passphrase = null) {\n    // In some cases archive size might be bigger than the sum of all files due to header size\n    let totalSize =\n      files.reduce((acc, { file }) => acc + file.size + 128, 0) + 128;\n\n    const bufferPtr = this._runCode.malloc(totalSize);\n    const outputSizePtr = this._runCode.malloc(this._runCode.sizeOfSizeT());\n\n    const newArchive = this._runCode.startArchiveWrite(\n      compression,\n      format,\n      bufferPtr,\n      totalSize,\n      outputSizePtr,\n      passphrase,\n    );\n\n    for (const { file, pathname } of files) {\n      const fileData = await this._loadFile(file);\n      this._runCode.writeArchiveFile(\n        newArchive,\n        pathname || file.name,\n        fileData.length,\n        fileData.ptr,\n      );\n      this._runCode.free(fileData.ptr);\n    }\n\n    const outputSize = this._runCode.finishArchiveWrite(\n      newArchive,\n      outputSizePtr,\n    );\n\n    if (outputSize < 0) {\n      throw new Error(this._runCode.getError(newArchive));\n    }\n\n    return this._wasmModule.HEAPU8.slice(bufferPtr, bufferPtr + outputSize);\n  }\n\n  async _loadFile(file) {\n    const arrayBuffer = await file.arrayBuffer();\n    const array = new Uint8Array(arrayBuffer);\n    const filePtr = this._runCode.malloc(array.length);\n    this._wasmModule.HEAPU8.set(array, filePtr);\n    return {\n      ptr: filePtr,\n      length: array.length,\n    };\n  }\n}\n","var libarchive = (() => {\n  var _scriptDir = import.meta.url;\n\n  return async function (moduleArg = {}) {\n    var Module = moduleArg;\n    var readyPromiseResolve, readyPromiseReject;\n    Module[\"ready\"] = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    var moduleOverrides = Object.assign({}, Module);\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n    var ENVIRONMENT_IS_WEB = typeof window == \"object\";\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n    var ENVIRONMENT_IS_NODE =\n      typeof process == \"object\" &&\n      typeof process.versions == \"object\" &&\n      typeof process.versions.node == \"string\";\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary;\n    if (ENVIRONMENT_IS_NODE) {\n      const { createRequire: createRequire } = await import(\"module\");\n      var require = createRequire(import.meta.url);\n      var fs = require(\"fs\");\n      var nodePath = require(\"path\");\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n      } else {\n        scriptDirectory = require(\"url\").fileURLToPath(\n          new URL(\"./\", import.meta.url),\n        );\n      }\n      read_ = (filename, binary) => {\n        filename = isFileURI(filename)\n          ? new URL(filename)\n          : nodePath.normalize(filename);\n        return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n      };\n      readBinary = (filename) => {\n        var ret = read_(filename, true);\n        if (!ret.buffer) {\n          ret = new Uint8Array(ret);\n        }\n        return ret;\n      };\n      readAsync = (filename, onload, onerror, binary = true) => {\n        filename = isFileURI(filename)\n          ? new URL(filename)\n          : nodePath.normalize(filename);\n        fs.readFile(filename, binary ? undefined : \"utf8\", (err, data) => {\n          if (err) onerror(err);\n          else onload(binary ? data.buffer : data);\n        });\n      };\n      if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n        thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n      }\n      arguments_ = process.argv.slice(2);\n      quit_ = (status, toThrow) => {\n        process.exitCode = status;\n        throw toThrow;\n      };\n      Module[\"inspect\"] = () => \"[Emscripten Module object]\";\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n      if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1,\n        );\n      } else {\n        scriptDirectory = \"\";\n      }\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.responseType = \"arraybuffer\";\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, true);\n          xhr.responseType = \"arraybuffer\";\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n    } else {\n    }\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.error.bind(console);\n    Object.assign(Module, moduleOverrides);\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n    if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n    if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n    var wasmBinary;\n    if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n    if (typeof WebAssembly != \"object\") {\n      abort(\"no native wasm support detected\");\n    }\n    var wasmMemory;\n    var ABORT = false;\n    var EXITSTATUS;\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n    var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n    }\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\")\n          Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      runtimeInitialized = true;\n      if (!Module[\"noFSInit\"] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n      TTY.init();\n      PIPEFS.root = FS.mount(PIPEFS, {}, null);\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\")\n          Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n    function addRunDependency(id) {\n      runDependencies++;\n      Module[\"monitorRunDependencies\"]?.(runDependencies);\n    }\n    function removeRunDependency(id) {\n      runDependencies--;\n      Module[\"monitorRunDependencies\"]?.(runDependencies);\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n    function abort(what) {\n      Module[\"onAbort\"]?.(what);\n      what = \"Aborted(\" + what + \")\";\n      err(what);\n      ABORT = true;\n      EXITSTATUS = 1;\n      what += \". Build with -sASSERTIONS for more info.\";\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      throw e;\n    }\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    var isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n    var isFileURI = (filename) => filename.startsWith(\"file://\");\n    var wasmBinaryFile;\n    if (Module[\"locateFile\"]) {\n      wasmBinaryFile = \"libarchive.wasm\";\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL(\"libarchive.wasm\", import.meta.url).href;\n    }\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n    function getBinaryPromise(binaryFile) {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == \"function\" && !isFileURI(binaryFile)) {\n          return fetch(binaryFile, { credentials: \"same-origin\" })\n            .then((response) => {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            })\n            .catch(() => getBinarySync(binaryFile));\n        } else if (readAsync) {\n          return new Promise((resolve, reject) => {\n            readAsync(\n              binaryFile,\n              (response) => resolve(new Uint8Array(response)),\n              reject,\n            );\n          });\n        }\n      }\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile)\n        .then((binary) => WebAssembly.instantiate(binary, imports))\n        .then((instance) => instance)\n        .then(receiver, (reason) => {\n          err(`failed to asynchronously prepare wasm: ${reason}`);\n          abort(reason);\n        });\n    }\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (\n        !binary &&\n        typeof WebAssembly.instantiateStreaming == \"function\" &&\n        !isDataURI(binaryFile) &&\n        !isFileURI(binaryFile) &&\n        !ENVIRONMENT_IS_NODE &&\n        typeof fetch == \"function\"\n      ) {\n        return fetch(binaryFile, { credentials: \"same-origin\" }).then(\n          (response) => {\n            var result = WebAssembly.instantiateStreaming(response, imports);\n            return result.then(callback, function (reason) {\n              err(`wasm streaming compile failed: ${reason}`);\n              err(\"falling back to ArrayBuffer instantiation\");\n              return instantiateArrayBuffer(binaryFile, imports, callback);\n            });\n          },\n        );\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n    function createWasm() {\n      var info = { a: wasmImports };\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n        wasmMemory = wasmExports[\"C\"];\n        updateMemoryViews();\n        addOnInit(wasmExports[\"D\"]);\n        removeRunDependency(\"wasm-instantiate\");\n        return wasmExports;\n      }\n      addRunDependency(\"wasm-instantiate\");\n      function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n      }\n      if (Module[\"instantiateWasm\"]) {\n        try {\n          return Module[\"instantiateWasm\"](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n          readyPromiseReject(e);\n        }\n      }\n      instantiateAsync(\n        wasmBinary,\n        wasmBinaryFile,\n        info,\n        receiveInstantiationResult,\n      ).catch(readyPromiseReject);\n      return {};\n    }\n    var tempDouble;\n    var tempI64;\n    function ExitStatus(status) {\n      this.name = \"ExitStatus\";\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n    var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    };\n    var noExitRuntime = Module[\"noExitRuntime\"] || true;\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === \"/\",\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === \".\") {\n            parts.splice(i, 1);\n          } else if (last === \"..\") {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift(\"..\");\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(\n          path.split(\"/\").filter((p) => !!p),\n          !isAbsolute,\n        ).join(\"/\");\n        if (!path && !isAbsolute) {\n          path = \".\";\n        }\n        if (path && trailingSlash) {\n          path += \"/\";\n        }\n        return (isAbsolute ? \"/\" : \"\") + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return \".\";\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === \"/\") return \"/\";\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join(\"/\"));\n      },\n      join2: (l, r) => PATH.normalize(l + \"/\" + r),\n    };\n    var initRandomFill = () => {\n      if (\n        typeof crypto == \"object\" &&\n        typeof crypto[\"getRandomValues\"] == \"function\"\n      ) {\n        return (view) => crypto.getRandomValues(view);\n      } else if (ENVIRONMENT_IS_NODE) {\n        try {\n          var crypto_module = require(\"crypto\");\n          var randomFillSync = crypto_module[\"randomFillSync\"];\n          if (randomFillSync) {\n            return (view) => crypto_module[\"randomFillSync\"](view);\n          }\n          var randomBytes = crypto_module[\"randomBytes\"];\n          return (view) => (view.set(randomBytes(view.byteLength)), view);\n        } catch (e) {}\n      }\n      abort(\"initRandomDevice\");\n    };\n    var randomFill = (view) => (randomFill = initRandomFill())(view);\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = \"\",\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n          if (typeof path != \"string\") {\n            throw new TypeError(\"Arguments to path.resolve must be strings\");\n          } else if (!path) {\n            return \"\";\n          }\n          resolvedPath = path + \"/\" + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split(\"/\").filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== \"\") break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== \"\") break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push(\"..\");\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n      },\n    };\n    var UTF8Decoder =\n      typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = \"\";\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 128)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 224) == 192) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 240) == 224) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n        if (u0 < 65536) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 65536;\n          str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n        }\n      }\n      return str;\n    };\n    var FS_stdin_getChar_buffer = [];\n    var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 127) {\n          len++;\n        } else if (c <= 2047) {\n          len += 2;\n        } else if (c >= 55296 && c <= 57343) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n        }\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 192 | (u >> 6);\n          heap[outIdx++] = 128 | (u & 63);\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 224 | (u >> 12);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 240 | (u >> 18);\n          heap[outIdx++] = 128 | ((u >> 12) & 63);\n          heap[outIdx++] = 128 | ((u >> 6) & 63);\n          heap[outIdx++] = 128 | (u & 63);\n        }\n      }\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (ENVIRONMENT_IS_NODE) {\n          var BUFSIZE = 256;\n          var buf = Buffer.alloc(BUFSIZE);\n          var bytesRead = 0;\n          var fd = process.stdin.fd;\n          try {\n            bytesRead = fs.readSync(fd, buf);\n          } catch (e) {\n            if (e.toString().includes(\"EOF\")) bytesRead = 0;\n            else throw e;\n          }\n          if (bytesRead > 0) {\n            result = buf.slice(0, bytesRead).toString(\"utf-8\");\n          } else {\n            result = null;\n          }\n        } else if (\n          typeof window != \"undefined\" &&\n          typeof window.prompt == \"function\"\n        ) {\n          result = window.prompt(\"Input: \");\n          if (result !== null) {\n            result += \"\\n\";\n          }\n        } else if (typeof readline == \"function\") {\n          result = readline();\n          if (result !== null) {\n            result += \"\\n\";\n          }\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {},\n      shutdown() {},\n      register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0,\n              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            ],\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n    var mmapAlloc = (size) => {\n      abort();\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink,\n            },\n            stream: { llseek: MEMFS.stream_ops.llseek },\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync,\n            },\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink,\n            },\n            stream: {},\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n            },\n            stream: FS.chrdev_stream_ops,\n          },\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir(node) {\n          var entries = [\".\", \"..\"];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          return 0;\n        },\n      },\n    };\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : \"\";\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            `Loading data file \"${url}\" failed (no arrayBuffer).`,\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw `Loading data file \"${url}\" failed.`;\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    };\n    var FS_createDataFile = (\n      parent,\n      name,\n      fileData,\n      canRead,\n      canWrite,\n      canOwn,\n    ) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n    var preloadPlugins = Module[\"preloadPlugins\"] || [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      if (typeof Browser != \"undefined\") Browser.init();\n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin[\"canHandle\"](fullname)) {\n          plugin[\"handle\"](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (\n      parent,\n      name,\n      url,\n      canRead,\n      canWrite,\n      onload,\n      onerror,\n      dontCreateFile,\n      canOwn,\n      preFinish,\n    ) => {\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`);\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(\n              parent,\n              name,\n              byteArray,\n              canRead,\n              canWrite,\n              canOwn,\n            );\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (\n          FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n            onerror?.();\n            removeRunDependency(dep);\n          })\n        ) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == \"string\") {\n        asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n      } else {\n        processData(url);\n      }\n    };\n    var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        r: 0,\n        \"r+\": 2,\n        w: 512 | 64 | 1,\n        \"w+\": 512 | 64 | 2,\n        a: 1024 | 64 | 1,\n        \"a+\": 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == \"undefined\") {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n        if (!path) return { path: \"\", node: null };\n        var defaults = { follow_mount: true, recurse_count: 0 };\n        opts = Object.assign(defaults, opts);\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n        var parts = path.split(\"/\").filter((p) => !!p);\n        var current = FS.root;\n        var current_path = \"/\";\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n        return { path: current_path, node: current };\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== \"/\"\n              ? `${mount}/${path}`\n              : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n        if (flag & 512) {\n          perms += \"w\";\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, \"wx\");\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, \"wx\");\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get() {\n                return this.node;\n              },\n              set(val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get() {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get() {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get() {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get() {\n                return this.shared.flags;\n              },\n              set(val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get() {\n                return this.shared.position;\n              },\n              set(val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          stream.stream_ops.open?.(stream);\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 255,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push.apply(check, m.mounts);\n        }\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == \"function\") {\n          callback = populate;\n          populate = false;\n        }\n        FS.syncFSRequests++;\n        if (FS.syncFSRequests > 1) {\n          err(\n            `warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`,\n          );\n        }\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          mountpoint = lookup.path;\n          node = lookup.node;\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n          while (current) {\n            var next = current.name_next;\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n            current = next;\n          }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === \".\" || name === \"..\") {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += \"/\" + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == \"undefined\") {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(28);\n        }\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== \".\") {\n          throw new FS.ErrnoError(55);\n        }\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n        if (old_node === new_node) {\n          return;\n        }\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        FS.hashRemoveNode(old_node);\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, { timestamp: Date.now() });\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == \"string\") {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, \"w\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n      },\n      open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == \"string\" ? FS_modeStringToFlags(flags) : flags;\n        mode = typeof mode == \"undefined\" ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == \"object\") {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n            node = lookup.node;\n          } catch (e) {}\n        }\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          ungotten: [],\n          error: false,\n        });\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != \"undefined\";\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap(stream, length, position, prot, flags) {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === \"utf8\") {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === \"binary\") {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == \"string\") {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error(\"Unsupported data type\");\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n      },\n      createDefaultDevices() {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice(\"/dev\", \"random\", randomByte);\n        FS.createDevice(\"/dev\", \"urandom\", randomByte);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n      },\n      createSpecialDirectories() {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount(\n          {\n            mount() {\n              var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n              node.node_ops = {\n                lookup(parent, name) {\n                  var fd = +name;\n                  var stream = FS.getStreamChecked(fd);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: \"fake\" },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          \"/proc/self/fd\",\n        );\n      },\n      createStandardStreams() {\n        if (Module[\"stdin\"]) {\n          FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n        if (Module[\"stdout\"]) {\n          FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        } else {\n          FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n        if (Module[\"stderr\"]) {\n          FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        } else {\n          FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n      },\n      ensureErrnoError() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.name = \"ErrnoError\";\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = \"FS error\";\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n      },\n      staticInit() {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = { MEMFS: MEMFS };\n      },\n      init(input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n      },\n      quit() {\n        FS.init.initialized = false;\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === \"/\";\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(\n          typeof parent == \"string\" ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == \"string\" ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == \"string\") {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(\n          typeof parent == \"string\" ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS_getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != \"undefined\") {\n          throw new Error(\n            \"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\",\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + \". Status: \" + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader(\"Accept-Ranges\")) &&\n              header === \"bytes\";\n            var usesGzip =\n              (header = xhr.getResponseHeader(\"Content-Encoding\")) &&\n              header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing) chunkSize = datalength;\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  \"invalid range (\" +\n                    from +\n                    \", \" +\n                    to +\n                    \") or no bytes requested!\",\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  \"only \" + datalength + \" bytes available! programmer error!\",\n                );\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              xhr.responseType = \"arraybuffer\";\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + \". Status: \" + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || \"\", true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == \"undefined\") {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                \"LazyFiles on gzip forces download of the whole file when length is accessed\",\n              );\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != \"undefined\") {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n    };\n    var UTF8ToString = (ptr, maxBytesToRead) =>\n      ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 4) >> 2] = stat.mode;\n        HEAPU32[(buf + 8) >> 2] = stat.nlink;\n        HEAP32[(buf + 12) >> 2] = stat.uid;\n        HEAP32[(buf + 16) >> 2] = stat.gid;\n        HEAP32[(buf + 20) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 24) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 28) >> 2] = tempI64[1]);\n        HEAP32[(buf + 32) >> 2] = 4096;\n        HEAP32[(buf + 36) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1e3) >>> 0,\n          ((tempDouble = Math.floor(atime / 1e3)),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 48) >> 2] = (atime % 1e3) * 1e3;\n        (tempI64 = [\n          Math.floor(mtime / 1e3) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1e3)),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (mtime % 1e3) * 1e3;\n        (tempI64 = [\n          Math.floor(ctime / 1e3) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1e3)),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (ctime % 1e3) * 1e3;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get() {\n        var ret = HEAP32[+SYSCALLS.varargs >> 2];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n      getp() {\n        return SYSCALLS.get();\n      },\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n    };\n    function ___syscall_dup(fd) {\n      try {\n        var old = SYSCALLS.getStreamFromFD(fd);\n        return FS.createStream(old).fd;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    var setErrNo = (value) => {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    };\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            while (FS.streams[arg]) {\n              arg++;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.getp();\n            var offset = 0;\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    var PIPEFS = {\n      BUCKET_BUFFER_SIZE: 8192,\n      mount(mount) {\n        return FS.createNode(null, \"/\", 16384 | 511, 0);\n      },\n      createPipe() {\n        var pipe = { buckets: [], refcnt: 2 };\n        pipe.buckets.push({\n          buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n          offset: 0,\n          roffset: 0,\n        });\n        var rName = PIPEFS.nextname();\n        var wName = PIPEFS.nextname();\n        var rNode = FS.createNode(PIPEFS.root, rName, 4096, 0);\n        var wNode = FS.createNode(PIPEFS.root, wName, 4096, 0);\n        rNode.pipe = pipe;\n        wNode.pipe = pipe;\n        var readableStream = FS.createStream({\n          path: rName,\n          node: rNode,\n          flags: 0,\n          seekable: false,\n          stream_ops: PIPEFS.stream_ops,\n        });\n        rNode.stream = readableStream;\n        var writableStream = FS.createStream({\n          path: wName,\n          node: wNode,\n          flags: 1,\n          seekable: false,\n          stream_ops: PIPEFS.stream_ops,\n        });\n        wNode.stream = writableStream;\n        return {\n          readable_fd: readableStream.fd,\n          writable_fd: writableStream.fd,\n        };\n      },\n      stream_ops: {\n        poll(stream) {\n          var pipe = stream.node.pipe;\n          if ((stream.flags & 2097155) === 1) {\n            return 256 | 4;\n          }\n          if (pipe.buckets.length > 0) {\n            for (var i = 0; i < pipe.buckets.length; i++) {\n              var bucket = pipe.buckets[i];\n              if (bucket.offset - bucket.roffset > 0) {\n                return 64 | 1;\n              }\n            }\n          }\n          return 0;\n        },\n        ioctl(stream, request, varargs) {\n          return 28;\n        },\n        fsync(stream) {\n          return 28;\n        },\n        read(stream, buffer, offset, length, position) {\n          var pipe = stream.node.pipe;\n          var currentLength = 0;\n          for (var i = 0; i < pipe.buckets.length; i++) {\n            var bucket = pipe.buckets[i];\n            currentLength += bucket.offset - bucket.roffset;\n          }\n          var data = buffer.subarray(offset, offset + length);\n          if (length <= 0) {\n            return 0;\n          }\n          if (currentLength == 0) {\n            throw new FS.ErrnoError(6);\n          }\n          var toRead = Math.min(currentLength, length);\n          var totalRead = toRead;\n          var toRemove = 0;\n          for (var i = 0; i < pipe.buckets.length; i++) {\n            var currBucket = pipe.buckets[i];\n            var bucketSize = currBucket.offset - currBucket.roffset;\n            if (toRead <= bucketSize) {\n              var tmpSlice = currBucket.buffer.subarray(\n                currBucket.roffset,\n                currBucket.offset,\n              );\n              if (toRead < bucketSize) {\n                tmpSlice = tmpSlice.subarray(0, toRead);\n                currBucket.roffset += toRead;\n              } else {\n                toRemove++;\n              }\n              data.set(tmpSlice);\n              break;\n            } else {\n              var tmpSlice = currBucket.buffer.subarray(\n                currBucket.roffset,\n                currBucket.offset,\n              );\n              data.set(tmpSlice);\n              data = data.subarray(tmpSlice.byteLength);\n              toRead -= tmpSlice.byteLength;\n              toRemove++;\n            }\n          }\n          if (toRemove && toRemove == pipe.buckets.length) {\n            toRemove--;\n            pipe.buckets[toRemove].offset = 0;\n            pipe.buckets[toRemove].roffset = 0;\n          }\n          pipe.buckets.splice(0, toRemove);\n          return totalRead;\n        },\n        write(stream, buffer, offset, length, position) {\n          var pipe = stream.node.pipe;\n          var data = buffer.subarray(offset, offset + length);\n          var dataLen = data.byteLength;\n          if (dataLen <= 0) {\n            return 0;\n          }\n          var currBucket = null;\n          if (pipe.buckets.length == 0) {\n            currBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: 0,\n              roffset: 0,\n            };\n            pipe.buckets.push(currBucket);\n          } else {\n            currBucket = pipe.buckets[pipe.buckets.length - 1];\n          }\n          assert(currBucket.offset <= PIPEFS.BUCKET_BUFFER_SIZE);\n          var freeBytesInCurrBuffer =\n            PIPEFS.BUCKET_BUFFER_SIZE - currBucket.offset;\n          if (freeBytesInCurrBuffer >= dataLen) {\n            currBucket.buffer.set(data, currBucket.offset);\n            currBucket.offset += dataLen;\n            return dataLen;\n          } else if (freeBytesInCurrBuffer > 0) {\n            currBucket.buffer.set(\n              data.subarray(0, freeBytesInCurrBuffer),\n              currBucket.offset,\n            );\n            currBucket.offset += freeBytesInCurrBuffer;\n            data = data.subarray(freeBytesInCurrBuffer, data.byteLength);\n          }\n          var numBuckets = (data.byteLength / PIPEFS.BUCKET_BUFFER_SIZE) | 0;\n          var remElements = data.byteLength % PIPEFS.BUCKET_BUFFER_SIZE;\n          for (var i = 0; i < numBuckets; i++) {\n            var newBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: PIPEFS.BUCKET_BUFFER_SIZE,\n              roffset: 0,\n            };\n            pipe.buckets.push(newBucket);\n            newBucket.buffer.set(data.subarray(0, PIPEFS.BUCKET_BUFFER_SIZE));\n            data = data.subarray(PIPEFS.BUCKET_BUFFER_SIZE, data.byteLength);\n          }\n          if (remElements > 0) {\n            var newBucket = {\n              buffer: new Uint8Array(PIPEFS.BUCKET_BUFFER_SIZE),\n              offset: data.byteLength,\n              roffset: 0,\n            };\n            pipe.buckets.push(newBucket);\n            newBucket.buffer.set(data);\n          }\n          return dataLen;\n        },\n        close(stream) {\n          var pipe = stream.node.pipe;\n          pipe.refcnt--;\n          if (pipe.refcnt === 0) {\n            pipe.buckets = null;\n          }\n        },\n      },\n      nextname() {\n        if (!PIPEFS.nextname.current) {\n          PIPEFS.nextname.current = 0;\n        }\n        return \"pipe[\" + PIPEFS.nextname.current++ + \"]\";\n      },\n    };\n    function ___syscall_pipe(fdPtr) {\n      try {\n        if (fdPtr == 0) {\n          throw new FS.ErrnoError(21);\n        }\n        var res = PIPEFS.createPipe();\n        HEAP32[fdPtr >> 2] = res.readable_fd;\n        HEAP32[(fdPtr + 4) >> 2] = res.writable_fd;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_poll(fds, nfds, timeout) {\n      try {\n        var nonzero = 0;\n        for (var i = 0; i < nfds; i++) {\n          var pollfd = fds + 8 * i;\n          var fd = HEAP32[pollfd >> 2];\n          var events = HEAP16[(pollfd + 4) >> 1];\n          var mask = 32;\n          var stream = FS.getStream(fd);\n          if (stream) {\n            mask = SYSCALLS.DEFAULT_POLLMASK;\n            if (stream.stream_ops.poll) {\n              mask = stream.stream_ops.poll(stream, -1);\n            }\n          }\n          mask &= events | 8 | 16;\n          if (mask) nonzero++;\n          HEAP16[(pollfd + 6) >> 1] = mask;\n        }\n        return nonzero;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort(\"Invalid flags passed to unlinkat\");\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return -e.errno;\n      }\n    }\n    var nowIsMonotonic = 1;\n    var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n    var convertI32PairToI53Checked = (lo, hi) =>\n      (hi + 2097152) >>> 0 < 4194305 - !!lo\n        ? (lo >>> 0) + hi * 4294967296\n        : NaN;\n    function __gmtime_js(time_low, time_high, tmPtr) {\n      var time = convertI32PairToI53Checked(time_low, time_high);\n      var date = new Date(time * 1e3);\n      HEAP32[tmPtr >> 2] = date.getUTCSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getUTCMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getUTCHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getUTCDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getUTCMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getUTCFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getUTCDay();\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n      var yday = ((date.getTime() - start) / (1e3 * 60 * 60 * 24)) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n    }\n    var isLeapYear = (year) =>\n      year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    var MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n    var MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = leap\n        ? MONTH_DAYS_LEAP_CUMULATIVE\n        : MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n      return yday;\n    };\n    function __localtime_js(time_low, time_high, tmPtr) {\n      var time = convertI32PairToI53Checked(time_low, time_high);\n      var date = new Date(time * 1e3);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n      var yday = ydayFromDate(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n    var __mktime_js = function (tmPtr) {\n      var ret = (() => {\n        var date = new Date(\n          HEAP32[(tmPtr + 20) >> 2] + 1900,\n          HEAP32[(tmPtr + 16) >> 2],\n          HEAP32[(tmPtr + 12) >> 2],\n          HEAP32[(tmPtr + 8) >> 2],\n          HEAP32[(tmPtr + 4) >> 2],\n          HEAP32[tmPtr >> 2],\n          0,\n        );\n        var dst = HEAP32[(tmPtr + 32) >> 2];\n        var guessedOffset = date.getTimezoneOffset();\n        var start = new Date(date.getFullYear(), 0, 1);\n        var summerOffset = new Date(\n          date.getFullYear(),\n          6,\n          1,\n        ).getTimezoneOffset();\n        var winterOffset = start.getTimezoneOffset();\n        var dstOffset = Math.min(winterOffset, summerOffset);\n        if (dst < 0) {\n          HEAP32[(tmPtr + 32) >> 2] = Number(\n            summerOffset != winterOffset && dstOffset == guessedOffset,\n          );\n        } else if (dst > 0 != (dstOffset == guessedOffset)) {\n          var nonDstOffset = Math.max(winterOffset, summerOffset);\n          var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n          date.setTime(date.getTime() + (trueOffset - guessedOffset) * 6e4);\n        }\n        HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n        var yday = ydayFromDate(date) | 0;\n        HEAP32[(tmPtr + 28) >> 2] = yday;\n        HEAP32[tmPtr >> 2] = date.getSeconds();\n        HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n        HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n        HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n        HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n        HEAP32[(tmPtr + 20) >> 2] = date.getYear();\n        var timeMs = date.getTime();\n        if (isNaN(timeMs)) {\n          setErrNo(61);\n          return -1;\n        }\n        return timeMs / 1e3;\n      })();\n      return (\n        setTempRet0(\n          ((tempDouble = ret),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ),\n        ret >>> 0\n      );\n    };\n    var __timegm_js = function (tmPtr) {\n      var ret = (() => {\n        var time = Date.UTC(\n          HEAP32[(tmPtr + 20) >> 2] + 1900,\n          HEAP32[(tmPtr + 16) >> 2],\n          HEAP32[(tmPtr + 12) >> 2],\n          HEAP32[(tmPtr + 8) >> 2],\n          HEAP32[(tmPtr + 4) >> 2],\n          HEAP32[tmPtr >> 2],\n          0,\n        );\n        var date = new Date(time);\n        HEAP32[(tmPtr + 24) >> 2] = date.getUTCDay();\n        var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n        var yday = ((date.getTime() - start) / (1e3 * 60 * 60 * 24)) | 0;\n        HEAP32[(tmPtr + 28) >> 2] = yday;\n        return date.getTime() / 1e3;\n      })();\n      return (\n        setTempRet0(\n          ((tempDouble = ret),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ),\n        ret >>> 0\n      );\n    };\n    var stringToUTF8 = (str, outPtr, maxBytesToWrite) =>\n      stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    var stringToNewUTF8 = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8(str, ret, size);\n      return ret;\n    };\n    var __tzset_js = (timezone, daylight, tzname) => {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = stringToNewUTF8(winterName);\n      var summerNamePtr = stringToNewUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    };\n    var _abort = () => {\n      abort(\"\");\n    };\n    var _emscripten_date_now = () => Date.now();\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    var _emscripten_memcpy_js = (dest, src, num) =>\n      HEAPU8.copyWithin(dest, src, src + num);\n    var getHeapMax = () => 2147483648;\n    var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        wasmMemory.grow(pages);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    };\n    var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      requestedSize >>>= 0;\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n      var alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n        var replacement = growMemory(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var ENV = {};\n    var getExecutableName = () => thisProgram || \"./this.program\";\n    var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == \"object\" &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            \"C\"\n          ).replace(\"-\", \"_\") + \".UTF-8\";\n        var env = {\n          USER: \"web_user\",\n          LOGNAME: \"web_user\",\n          PATH: \"/\",\n          PWD: \"/\",\n          HOME: \"/home/web_user\",\n          LANG: lang,\n          _: getExecutableName(),\n        };\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n    var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n      HEAP8[buffer >> 0] = 0;\n    };\n    var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n    var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => (bufSize += string.length + 1));\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    };\n    var runtimeKeepaliveCounter = 0;\n    var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n    var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module[\"onExit\"]?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n    var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n      _proc_exit(status);\n    };\n    var _exit = exitJS;\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== \"undefined\") {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      var offset = convertI32PairToI53Checked(offset_low, offset_high);\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1\n            ? tempDouble > 0\n              ? +Math.floor(tempDouble / 4294967296) >>> 0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== \"undefined\") {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == \"undefined\" || !(e.name === \"ErrnoError\")) throw e;\n        return e.errno;\n      }\n    }\n    var arraySum = (array, index) => {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {}\n      return sum;\n    };\n    var MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[\n          currentMonth\n        ];\n        if (days > daysInCurrentMonth - newDate.getDate()) {\n          days -= daysInCurrentMonth - newDate.getDate() + 1;\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth + 1);\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear() + 1);\n          }\n        } else {\n          newDate.setDate(newDate.getDate() + days);\n          return newDate;\n        }\n      }\n      return newDate;\n    };\n    var writeArrayToMemory = (array, buffer) => {\n      HEAP8.set(array, buffer);\n    };\n    var _strftime = (s, maxsize, format, tm) => {\n      var tm_zone = HEAPU32[(tm + 40) >> 2];\n      var date = {\n        tm_sec: HEAP32[tm >> 2],\n        tm_min: HEAP32[(tm + 4) >> 2],\n        tm_hour: HEAP32[(tm + 8) >> 2],\n        tm_mday: HEAP32[(tm + 12) >> 2],\n        tm_mon: HEAP32[(tm + 16) >> 2],\n        tm_year: HEAP32[(tm + 20) >> 2],\n        tm_wday: HEAP32[(tm + 24) >> 2],\n        tm_yday: HEAP32[(tm + 28) >> 2],\n        tm_isdst: HEAP32[(tm + 32) >> 2],\n        tm_gmtoff: HEAP32[(tm + 36) >> 2],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\",\n      };\n      var pattern = UTF8ToString(format);\n      var EXPANSION_RULES_1 = {\n        \"%c\": \"%a %b %d %H:%M:%S %Y\",\n        \"%D\": \"%m/%d/%y\",\n        \"%F\": \"%Y-%m-%d\",\n        \"%h\": \"%b\",\n        \"%r\": \"%I:%M:%S %p\",\n        \"%R\": \"%H:%M\",\n        \"%T\": \"%H:%M:%S\",\n        \"%x\": \"%m/%d/%y\",\n        \"%X\": \"%H:%M:%S\",\n        \"%Ec\": \"%c\",\n        \"%EC\": \"%C\",\n        \"%Ex\": \"%m/%d/%y\",\n        \"%EX\": \"%H:%M:%S\",\n        \"%Ey\": \"%y\",\n        \"%EY\": \"%Y\",\n        \"%Od\": \"%d\",\n        \"%Oe\": \"%e\",\n        \"%OH\": \"%H\",\n        \"%OI\": \"%I\",\n        \"%Om\": \"%m\",\n        \"%OM\": \"%M\",\n        \"%OS\": \"%S\",\n        \"%Ou\": \"%u\",\n        \"%OU\": \"%U\",\n        \"%OV\": \"%V\",\n        \"%Ow\": \"%w\",\n        \"%OW\": \"%W\",\n        \"%Oy\": \"%y\",\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(\n          new RegExp(rule, \"g\"),\n          EXPANSION_RULES_1[rule],\n        );\n      }\n      var WEEKDAYS = [\n        \"Sunday\",\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n        \"Saturday\",\n      ];\n      var MONTHS = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      function leadingSomething(value, digits, character) {\n        var str = typeof value == \"number\" ? value.toString() : value || \"\";\n        while (str.length < digits) {\n          str = character[0] + str;\n        }\n        return str;\n      }\n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, \"0\");\n      }\n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : value > 0 ? 1 : 0;\n        }\n        var compare;\n        if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate() - date2.getDate());\n          }\n        }\n        return compare;\n      }\n      function getFirstWeekStartDate(janFourth) {\n        switch (janFourth.getDay()) {\n          case 0:\n            return new Date(janFourth.getFullYear() - 1, 11, 29);\n          case 1:\n            return janFourth;\n          case 2:\n            return new Date(janFourth.getFullYear(), 0, 3);\n          case 3:\n            return new Date(janFourth.getFullYear(), 0, 2);\n          case 4:\n            return new Date(janFourth.getFullYear(), 0, 1);\n          case 5:\n            return new Date(janFourth.getFullYear() - 1, 11, 31);\n          case 6:\n            return new Date(janFourth.getFullYear() - 1, 11, 30);\n        }\n      }\n      function getWeekBasedYear(date) {\n        var thisDate = addDays(\n          new Date(date.tm_year + 1900, 0, 1),\n          date.tm_yday,\n        );\n        var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n        var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n        var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n        var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n        if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n          if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n            return thisDate.getFullYear() + 1;\n          }\n          return thisDate.getFullYear();\n        }\n        return thisDate.getFullYear() - 1;\n      }\n      var EXPANSION_RULES_2 = {\n        \"%a\": (date) => WEEKDAYS[date.tm_wday].substring(0, 3),\n        \"%A\": (date) => WEEKDAYS[date.tm_wday],\n        \"%b\": (date) => MONTHS[date.tm_mon].substring(0, 3),\n        \"%B\": (date) => MONTHS[date.tm_mon],\n        \"%C\": (date) => {\n          var year = date.tm_year + 1900;\n          return leadingNulls((year / 100) | 0, 2);\n        },\n        \"%d\": (date) => leadingNulls(date.tm_mday, 2),\n        \"%e\": (date) => leadingSomething(date.tm_mday, 2, \" \"),\n        \"%g\": (date) => getWeekBasedYear(date).toString().substring(2),\n        \"%G\": (date) => getWeekBasedYear(date),\n        \"%H\": (date) => leadingNulls(date.tm_hour, 2),\n        \"%I\": (date) => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;\n          else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        \"%j\": (date) =>\n          leadingNulls(\n            date.tm_mday +\n              arraySum(\n                isLeapYear(date.tm_year + 1900)\n                  ? MONTH_DAYS_LEAP\n                  : MONTH_DAYS_REGULAR,\n                date.tm_mon - 1,\n              ),\n            3,\n          ),\n        \"%m\": (date) => leadingNulls(date.tm_mon + 1, 2),\n        \"%M\": (date) => leadingNulls(date.tm_min, 2),\n        \"%n\": () => \"\\n\",\n        \"%p\": (date) => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return \"AM\";\n          }\n          return \"PM\";\n        },\n        \"%S\": (date) => leadingNulls(date.tm_sec, 2),\n        \"%t\": () => \"\\t\",\n        \"%u\": (date) => date.tm_wday || 7,\n        \"%U\": (date) => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        \"%V\": (date) => {\n          var val = Math.floor(\n            (date.tm_yday + 7 - ((date.tm_wday + 6) % 7)) / 7,\n          );\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n          if (!val) {\n            val = 52;\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n            if (\n              dec31 == 4 ||\n              (dec31 == 5 && isLeapYear((date.tm_year % 400) - 1))\n            ) {\n              val++;\n            }\n          } else if (val == 53) {\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n          }\n          return leadingNulls(val, 2);\n        },\n        \"%w\": (date) => date.tm_wday,\n        \"%W\": (date) => {\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        \"%y\": (date) => (date.tm_year + 1900).toString().substring(2),\n        \"%Y\": (date) => date.tm_year + 1900,\n        \"%z\": (date) => {\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          off = (off / 60) * 100 + (off % 60);\n          return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n        },\n        \"%Z\": (date) => date.tm_zone,\n        \"%%\": () => \"%\",\n      };\n      pattern = pattern.replace(/%%/g, \"\\0\\0\");\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(\n            new RegExp(rule, \"g\"),\n            EXPANSION_RULES_2[rule](date),\n          );\n        }\n      }\n      pattern = pattern.replace(/\\0\\0/g, \"%\");\n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n      writeArrayToMemory(bytes, s);\n      return bytes.length - 1;\n    };\n    var getCFunc = (ident) => {\n      var func = Module[\"_\" + ident];\n      return func;\n    };\n    var stringToUTF8OnStack = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n    var ccall = (ident, returnType, argTypes, args, opts) => {\n      var toC = {\n        string: (str) => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) {\n            ret = stringToUTF8OnStack(str);\n          }\n          return ret;\n        },\n        array: (arr) => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        },\n      };\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") {\n          return UTF8ToString(ret);\n        }\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n      ret = onDone(ret);\n      return ret;\n    };\n    var cwrap = (ident, returnType, argTypes, opts) => {\n      var numericArgs =\n        !argTypes ||\n        argTypes.every((type) => type === \"number\" || type === \"boolean\");\n      var numericRet = returnType !== \"string\";\n      if (numericRet && numericArgs && !opts) {\n        return getCFunc(ident);\n      }\n      return function () {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      };\n    };\n    var ALLOC_STACK = 1;\n    var allocate = (slab, allocator) => {\n      var ret;\n      if (allocator == ALLOC_STACK) {\n        ret = stackAlloc(slab.length);\n      } else {\n        ret = _malloc(slab.length);\n      }\n      if (!slab.subarray && !slab.slice) {\n        slab = new Uint8Array(slab);\n      }\n      HEAPU8.set(slab, ret);\n      return ret;\n    };\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n    var wasmImports = {\n      i: ___syscall_dup,\n      a: ___syscall_fcntl64,\n      x: ___syscall_fstat64,\n      u: ___syscall_lstat64,\n      v: ___syscall_newfstatat,\n      y: ___syscall_openat,\n      t: ___syscall_pipe,\n      s: ___syscall_poll,\n      w: ___syscall_stat64,\n      q: ___syscall_unlinkat,\n      B: __emscripten_get_now_is_monotonic,\n      k: __gmtime_js,\n      l: __localtime_js,\n      m: __mktime_js,\n      n: __timegm_js,\n      r: __tzset_js,\n      b: _abort,\n      c: _emscripten_date_now,\n      h: _emscripten_memcpy_js,\n      p: _emscripten_resize_heap,\n      z: _environ_get,\n      A: _environ_sizes_get,\n      g: _exit,\n      e: _fd_close,\n      j: _fd_read,\n      o: _fd_seek,\n      d: _fd_write,\n      f: _strftime,\n    };\n    var wasmExports = createWasm();\n    var ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports[\"D\"])();\n    var _get_version = (Module[\"_get_version\"] = () =>\n      (_get_version = Module[\"_get_version\"] = wasmExports[\"E\"])());\n    var _archive_open = (Module[\"_archive_open\"] = (a0, a1, a2, a3) =>\n      (_archive_open = Module[\"_archive_open\"] = wasmExports[\"F\"])(\n        a0,\n        a1,\n        a2,\n        a3,\n      ));\n    var _archive_read_add_passphrase = (Module[\"_archive_read_add_passphrase\"] =\n      (a0, a1) =>\n        (_archive_read_add_passphrase = Module[\"_archive_read_add_passphrase\"] =\n          wasmExports[\"G\"])(a0, a1));\n    var _archive_error_string = (Module[\"_archive_error_string\"] = (a0) =>\n      (_archive_error_string = Module[\"_archive_error_string\"] =\n        wasmExports[\"H\"])(a0));\n    var _get_next_entry = (Module[\"_get_next_entry\"] = (a0) =>\n      (_get_next_entry = Module[\"_get_next_entry\"] = wasmExports[\"I\"])(a0));\n    var _get_filedata = (Module[\"_get_filedata\"] = (a0, a1) =>\n      (_get_filedata = Module[\"_get_filedata\"] = wasmExports[\"J\"])(a0, a1));\n    var _malloc = (Module[\"_malloc\"] = (a0) =>\n      (_malloc = Module[\"_malloc\"] = wasmExports[\"K\"])(a0));\n    var _archive_close = (Module[\"_archive_close\"] = (a0) =>\n      (_archive_close = Module[\"_archive_close\"] = wasmExports[\"L\"])(a0));\n    var _start_archive_write = (Module[\"_start_archive_write\"] = (\n      a0,\n      a1,\n      a2,\n      a3,\n      a4,\n      a5,\n    ) =>\n      (_start_archive_write = Module[\"_start_archive_write\"] =\n        wasmExports[\"M\"])(a0, a1, a2, a3, a4, a5));\n    var _write_archive_file = (Module[\"_write_archive_file\"] = (\n      a0,\n      a1,\n      a2,\n      a3,\n    ) =>\n      (_write_archive_file = Module[\"_write_archive_file\"] = wasmExports[\"N\"])(\n        a0,\n        a1,\n        a2,\n        a3,\n      ));\n    var _size_of_size_t = (Module[\"_size_of_size_t\"] = () =>\n      (_size_of_size_t = Module[\"_size_of_size_t\"] = wasmExports[\"O\"])());\n    var _finish_archive_write = (Module[\"_finish_archive_write\"] = (a0, a1) =>\n      (_finish_archive_write = Module[\"_finish_archive_write\"] =\n        wasmExports[\"P\"])(a0, a1));\n    var _free = (Module[\"_free\"] = (a0) =>\n      (_free = Module[\"_free\"] = wasmExports[\"Q\"])(a0));\n    var ___errno_location = () => (___errno_location = wasmExports[\"R\"])();\n    var _archive_entry_birthtime_nsec = (Module[\n      \"_archive_entry_birthtime_nsec\"\n    ] = (a0) =>\n      (_archive_entry_birthtime_nsec = Module[\"_archive_entry_birthtime_nsec\"] =\n        wasmExports[\"S\"])(a0));\n    var _archive_entry_filetype = (Module[\"_archive_entry_filetype\"] = (a0) =>\n      (_archive_entry_filetype = Module[\"_archive_entry_filetype\"] =\n        wasmExports[\"T\"])(a0));\n    var _archive_entry_mtime_nsec = (Module[\"_archive_entry_mtime_nsec\"] = (\n      a0,\n    ) =>\n      (_archive_entry_mtime_nsec = Module[\"_archive_entry_mtime_nsec\"] =\n        wasmExports[\"U\"])(a0));\n    var _archive_entry_pathname = (Module[\"_archive_entry_pathname\"] = (a0) =>\n      (_archive_entry_pathname = Module[\"_archive_entry_pathname\"] =\n        wasmExports[\"V\"])(a0));\n    var _archive_entry_pathname_utf8 = (Module[\"_archive_entry_pathname_utf8\"] =\n      (a0) =>\n        (_archive_entry_pathname_utf8 = Module[\"_archive_entry_pathname_utf8\"] =\n          wasmExports[\"W\"])(a0));\n    var _archive_entry_size = (Module[\"_archive_entry_size\"] = (a0) =>\n      (_archive_entry_size = Module[\"_archive_entry_size\"] = wasmExports[\"X\"])(\n        a0,\n      ));\n    var _archive_entry_is_encrypted = (Module[\"_archive_entry_is_encrypted\"] = (\n      a0,\n    ) =>\n      (_archive_entry_is_encrypted = Module[\"_archive_entry_is_encrypted\"] =\n        wasmExports[\"Y\"])(a0));\n    var _archive_read_has_encrypted_entries = (Module[\n      \"_archive_read_has_encrypted_entries\"\n    ] = (a0) =>\n      (_archive_read_has_encrypted_entries = Module[\n        \"_archive_read_has_encrypted_entries\"\n      ] =\n        wasmExports[\"Z\"])(a0));\n    var _archive_read_data_skip = (Module[\"_archive_read_data_skip\"] = (a0) =>\n      (_archive_read_data_skip = Module[\"_archive_read_data_skip\"] =\n        wasmExports[\"_\"])(a0));\n    var _htons = (a0) => (_htons = wasmExports[\"htons\"])(a0);\n    var _ntohs = (a0) => (_ntohs = wasmExports[\"ntohs\"])(a0);\n    var setTempRet0 = (a0) => (setTempRet0 = wasmExports[\"aa\"])(a0);\n    var stackSave = () => (stackSave = wasmExports[\"ba\"])();\n    var stackRestore = (a0) => (stackRestore = wasmExports[\"ca\"])(a0);\n    var stackAlloc = (a0) => (stackAlloc = wasmExports[\"da\"])(a0);\n    Module[\"cwrap\"] = cwrap;\n    Module[\"allocate\"] = allocate;\n    var calledRun;\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n      preRun();\n      if (runDependencies > 0) {\n        return;\n      }\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        initRuntime();\n        readyPromiseResolve(Module);\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\")\n        Module[\"preInit\"] = [Module[\"preInit\"]];\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n    run();\n\n    return moduleArg.ready;\n  };\n})();\nexport default libarchive;\n","/* eslint-disable no-undef */\nimport libarchive from \"./wasm-gen/libarchive.js\";\n\nexport class WasmModule {\n  constructor() {\n    this.preRun = [];\n    this.postRun = [];\n    this.totalDependencies = 0;\n  }\n\n  print(...text) {\n    console.log(text);\n  }\n\n  printErr(...text) {\n    console.error(text);\n  }\n\n  initFunctions() {\n    this.runCode = {\n      // const char * get_version()\n      getVersion: this.cwrap(\"get_version\", \"string\", []),\n      // void * void* archive_open( const void *buf, size_t size, const char * passphrase, const char * locale)\n      // retuns archive pointer\n      openArchive: this.cwrap(\"archive_open\", \"number\", [\n        \"number\",\n        \"number\",\n        \"string\",\n        \"string\",\n      ]),\n      // void * get_entry(void * archive)\n      // return archive entry pointer\n      getNextEntry: this.cwrap(\"get_next_entry\", \"number\", [\"number\"]),\n      // void * get_filedata( void * archive, size_t bufferSize )\n      getFileData: this.cwrap(\"get_filedata\", \"number\", [\"number\", \"number\"]),\n      // int archive_read_data_skip(struct archive *_a)\n      skipEntry: this.cwrap(\"archive_read_data_skip\", \"number\", [\"number\"]),\n      // void archive_close( void * archive )\n      closeArchive: this.cwrap(\"archive_close\", null, [\"number\"]),\n      // la_int64_t archive_entry_size( struct archive_entry * )\n      getEntrySize: this.cwrap(\"archive_entry_size\", \"number\", [\"number\"]),\n      // const char * archive_entry_pathname_utf8( struct archive_entry * )\n      getEntryName: this.cwrap(\"archive_entry_pathname\", \"string\", [\"number\"]),\n      // __LA_MODE_T archive_entry_filetype( struct archive_entry * )\n      /*\n            #define AE_IFMT\t\t((__LA_MODE_T)0170000)\n            #define AE_IFREG\t((__LA_MODE_T)0100000) // Regular file\n            #define AE_IFLNK\t((__LA_MODE_T)0120000) // Sybolic link\n            #define AE_IFSOCK\t((__LA_MODE_T)0140000) // Socket\n            #define AE_IFCHR\t((__LA_MODE_T)0020000) // Character device\n            #define AE_IFBLK\t((__LA_MODE_T)0060000) // Block device\n            #define AE_IFDIR\t((__LA_MODE_T)0040000) // Directory\n            #define AE_IFIFO\t((__LA_MODE_T)0010000) // Named pipe\n            */\n      getEntryType: this.cwrap(\"archive_entry_filetype\", \"number\", [\"number\"]),\n      // long\t\t archive_entry_mtime_nsec(struct archive_entry *);\n      getEntryLastModified: this.cwrap(\"archive_entry_mtime_nsec\", \"number\", [\n        \"number\",\n      ]),\n\n      // const char * archive_error_string(struct archive *);\n      getError: this.cwrap(\"archive_error_string\", \"string\", [\"number\"]),\n\n      // void *start_archive_write(char *filter, char *format, void *buff, size_t buffsize, size_t *outputsize, char *passphrase)\n      startArchiveWrite: this.cwrap(\"start_archive_write\", \"number\", [\n        \"string\",\n        \"string\",\n        \"number\",\n        \"number\",\n        \"number\",\n        \"string\",\n      ]),\n\n      // void write_archive_file( void *a, char *pathname, size_t filesize , char *filedata )\n      writeArchiveFile: this.cwrap(\"write_archive_file\", null, [\n        \"number\",\n        \"string\",\n        \"number\",\n        \"number\",\n      ]),\n\n      // int finish_archive_write(void *a, size_t *outputsize)\n      finishArchiveWrite: this.cwrap(\"finish_archive_write\", \"number\", [\n        \"number\",\n        \"number\",\n      ]),\n\n      /*\n       * Returns 1 if the archive contains at least one encrypted entry.\n       * If the archive format not support encryption at all\n       * ARCHIVE_READ_FORMAT_ENCRYPTION_UNSUPPORTED is returned.\n       * If for any other reason (e.g. not enough data read so far)\n       * we cannot say whether there are encrypted entries, then\n       * ARCHIVE_READ_FORMAT_ENCRYPTION_DONT_KNOW is returned.\n       * In general, this function will return values below zero when the\n       * reader is uncertain or totally incapable of encryption support.\n       * When this function returns 0 you can be sure that the reader\n       * supports encryption detection but no encrypted entries have\n       * been found yet.\n       *\n       * NOTE: If the metadata/header of an archive is also encrypted, you\n       * cannot rely on the number of encrypted entries. That is why this\n       * function does not return the number of encrypted entries but#\n       * just shows that there are some.\n       */\n      // __LA_DECL int\tarchive_read_has_encrypted_entries(struct archive *);\n      entryIsEncrypted: this.cwrap(\"archive_entry_is_encrypted\", \"number\", [\n        \"number\",\n      ]),\n      hasEncryptedEntries: this.cwrap(\n        \"archive_read_has_encrypted_entries\",\n        \"number\",\n        [\"number\"],\n      ),\n      // __LA_DECL int archive_read_add_passphrase(struct archive *, const char *);\n      addPassphrase: this.cwrap(\"archive_read_add_passphrase\", \"number\", [\n        \"number\",\n        \"string\",\n      ]),\n      string: (str) => this.allocate(this.intArrayFromString(str), \"i8\", 0),\n      malloc: this.cwrap(\"malloc\", \"number\", [\"number\"]),\n      free: this.cwrap(\"free\", null, [\"number\"]),\n      sizeOfSizeT: this.cwrap(\"size_of_size_t\", \"number\", []),\n    };\n  }\n\n  monitorRunDependencies() {}\n}\n\nexport function getWasmModule(cb) {\n  libarchive(new WasmModule()).then((module) => {\n    module.initFunctions();\n    cb(module);\n  });\n}\n","import { ArchiveReader } from \"./archive-reader\";\nimport { ArchiveWriter } from \"./archive-writer\";\nimport { getWasmModule } from \"./wasm-module\";\n\nlet reader = null;\nlet writer = null;\nlet ready = false;\n\nexport class LibArchiveWorker {\n  constructor(readyCallback) {\n    LibArchiveWorker.readyCallback = readyCallback;\n    if (ready) {\n      setTimeout(() => readyCallback(), 0);\n    }\n  }\n\n  open(file, cb) {\n    reader.open(file).then(() => cb());\n  }\n\n  listFiles() {\n    let arr = [];\n    for (const entry of reader.entries(true)) {\n      arr.push(entry);\n    }\n    return arr;\n  }\n\n  extractFiles() {\n    let arr = [];\n    for (const entry of reader.entries(false)) {\n      arr.push(entry);\n    }\n    return arr;\n  }\n\n  extractSingleFile(target) {\n    for (const entry of reader.entries(true, target)) {\n      if (entry.fileData) {\n        return entry;\n      }\n    }\n  }\n\n  hasEncryptedData() {\n    return reader.hasEncryptedData();\n  }\n\n  usePassword(passphrase) {\n    reader.setPassphrase(passphrase);\n  }\n\n  setLocale(locale) {\n    reader.setLocale(locale);\n  }\n\n  writeArchive(files, compression, format, passphrase) {\n    return writer.write(files, compression, format, passphrase);\n  }\n\n  close() {\n    reader.close();\n  }\n}\n\ngetWasmModule((wasmModule) => {\n  reader = new ArchiveReader(wasmModule);\n  writer = new ArchiveWriter(wasmModule);\n  LibArchiveWorker?.readyCallback?.();\n  ready = true;\n});\n","import * as Comlink from \"comlink/dist/esm/comlink.mjs\";\nimport { LibArchiveWorker } from \"./worker\";\nimport { parentPort } from \"worker_threads\";\nimport nodeEndpoint from \"comlink/dist/esm/node-adapter.mjs\";\n\nComlink.expose(LibArchiveWorker, nodeEndpoint(parentPort));\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction nodeEndpoint(nep) {\n    const listeners = new WeakMap();\n    return {\n        postMessage: nep.postMessage.bind(nep),\n        addEventListener: (_, eh) => {\n            const l = (data) => {\n                if (\"handleEvent\" in eh) {\n                    eh.handleEvent({ data });\n                }\n                else {\n                    eh({ data });\n                }\n            };\n            nep.on(\"message\", l);\n            listeners.set(eh, l);\n        },\n        removeEventListener: (_, eh) => {\n            const l = listeners.get(eh);\n            if (!l) {\n                return;\n            }\n            nep.off(\"message\", l);\n            listeners.delete(eh);\n        },\n        start: nep.start && nep.start.bind(nep),\n    };\n}\n\nexport { nodeEndpoint as default };\n//# sourceMappingURL=node-adapter.mjs.map\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","value","serialized","Error","isError","message","name","stack","Object","assign","ep","globalThis","allowedOrigins","addEventListener","callback","ev","data","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","get","isProxyReleased","Proxy","_target","unregister","unregisterProxy","length","r","p","toString","bind","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","v","arr","Array","prototype","concat","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","TYPE_MAP","ArchiveReader","wasmModule","this","_wasmModule","_runCode","runCode","_file","_passphrase","_locale","open","file","fileData","_loadFile","_fileLength","_filePtr","ptr","closeArchive","_archive","_free","hasEncryptedData","openArchive","getNextEntry","status","hasEncryptedEntries","setPassphrase","passphrase","setLocale","locale","entries","skipExtraction","except","entry","entryData","size","getEntrySize","getEntryName","getEntryType","lastModified","getEntryLastModified","ref","fileName","split","skipEntry","getFileData","getError","HEAPU8","arrayBuffer","array","Uint8Array","filePtr","malloc","ArchiveWriter","write","files","compression","format","totalSize","acc","bufferPtr","outputSizePtr","sizeOfSizeT","newArchive","startArchiveWrite","pathname","writeArchiveFile","free","outputSize","finishArchiveWrite","_scriptDir","libarchive","url","async","moduleArg","readyPromiseResolve","readyPromiseReject","Module","reject","read_","readAsync","readBinary","moduleOverrides","thisProgram","quit_","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","scriptDirectory","createRequire","import","require","fs","nodePath","dirname","fileURLToPath","URL","filename","binary","isFileURI","normalize","readFileSync","ret","buffer","onload","onerror","readFile","err","argv","replace","exitCode","self","location","href","document","currentScript","src","indexOf","substr","lastIndexOf","xhr","XMLHttpRequest","send","responseText","responseType","response","wasmBinary","wasmMemory","out","log","WebAssembly","abort","HEAP8","HEAP16","HEAP32","HEAPU32","ABORT","assert","condition","text","updateMemoryViews","b","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","addRunDependency","removeRunDependency","what","e","RuntimeError","wasmBinaryFile","tempDouble","tempI64","isDataURI","startsWith","getBinarySync","instantiateArrayBuffer","binaryFile","imports","receiver","fetch","credentials","getBinaryPromise","instantiate","instance","reason","ExitStatus","callRuntimeCallbacks","callbacks","shift","noExitRuntime","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","i","splice","unshift","isAbsolute","trailingSlash","filter","result","root","dir","basename","lastSlash","paths","call","arguments","join2","randomFill","view","crypto","getRandomValues","crypto_module","randomBytes","byteLength","initRandomFill","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","relative","from","to","trim","end","fromParts","toParts","min","samePartsLength","outputParts","push","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","FS_stdin_getChar_buffer","lengthBytesUTF8","len","c","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","init","shutdown","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","fsync","read","offset","pos","get_char","bytesRead","timestamp","Date","now","put_char","default_tty_ops","buf","Buffer","alloc","fd","stdin","readSync","includes","prompt","readline","FS_stdin_getChar","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","optional_actions","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","mount","createNode","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","key","keys","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","preloadPlugins","FS_getMode","canRead","canWrite","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","getStreamChecked","getStream","createStream","FSStream","shared","defineProperties","object","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","syncfs","populate","completed","doCallback","done","errored","forEach","pseudo","mountRoot","unmount","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","w","a","FS_modeStringToFlags","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","arg","encoding","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","quit","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","writeChunks","fn","UTF8ToString","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","func","abs","getTime","doMsync","addr","varargs","getp","getStr","setErrNo","___errno_location","PIPEFS","BUCKET_BUFFER_SIZE","createPipe","pipe","buckets","refcnt","roffset","rName","nextname","wName","rNode","wNode","readableStream","writableStream","readable_fd","writable_fd","poll","bucket","request","currentLength","toRead","totalRead","toRemove","currBucket","bucketSize","tmpSlice","dataLen","freeBytesInCurrBuffer","numBuckets","remElements","newBucket","convertI32PairToI53Checked","lo","hi","NaN","isLeapYear","year","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","getFullYear","getMonth","getDate","stringToUTF8","outPtr","stringToNewUTF8","_malloc","growMemory","pages","grow","ENV","getEnvStrings","strings","env","USER","LOGNAME","PWD","HOME","LANG","navigator","languages","_","x","_proc_exit","_exit","implicit","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","writeArrayToMemory","getCFunc","ident","ccall","returnType","argTypes","args","toC","string","stackAlloc","stringToUTF8OnStack","cArgs","converter","stackSave","stackRestore","Boolean","convertReturnValue","onDone","readMode","writeMode","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","FS_createDataFile","Browser","handled","plugin","FS_handledByPreloadPlugin","noRunDep","dep","event","asyncLoad","wasmImports","old","nofollow","y","t","fdPtr","res","s","fds","nfds","timeout","nonzero","pollfd","events","mask","q","B","k","time_low","time_high","tmPtr","time","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","yday","getSeconds","getMinutes","getHours","getDay","getTimezoneOffset","summerOffset","winterOffset","dst","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timeMs","isNaN","setTempRet0","n","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","match","toTimeString","winterName","summerName","winterNamePtr","summerNamePtr","h","dest","num","copyWithin","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","z","__environ","environ_buf","bufSize","stringToAscii","A","penviron_count","penviron_buf_size","g","j","iov","iovcnt","pnum","curr","doReadv","o","offset_low","offset_high","newOffset","doWritev","f","maxsize","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","addDays","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","index","sum","arraySum","jan1","dec31","off","ahead","bytes","wasmExports","info","receiveInstance","module","cb","exports","instantiateStreaming","createWasm","a0","a1","a2","a3","a4","a5","calledRun","run","doRun","postRun","preRun","setTimeout","numericArgs","every","slab","allocator","runCaller","ready","WasmModule","totalDependencies","print","printErr","initFunctions","getVersion","cwrap","entryIsEncrypted","addPassphrase","monitorRunDependencies","reader","writer","LibArchiveWorker","readyCallback","listFiles","extractFiles","extractSingleFile","usePassword","writeArchive","Comlink.expose","nep","listeners","eh","handleEvent","on","delete","nodeEndpoint","parentPort"],"mappings":"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"}